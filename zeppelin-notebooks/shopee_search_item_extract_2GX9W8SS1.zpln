{
  "paragraphs": [
    {
      "text": "%sh\n\ndate\n\ndu -sh /log-received/*\ndu -sh /warehouse/delta/shopee_data/*",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:26:45.471",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Thu 03 Mar 2022 08:26:19 AM Asia\n43M\t/log-received/api_api_v4_search_search_items.json\n11M\t/warehouse/delta/shopee_data/api_category_fulllist_df\n3.0M\t/warehouse/delta/shopee_data/api_category_path_fulllist_df\n23M\t/warehouse/delta/shopee_data/api_search_item_raw_data_da\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645679728483_207267607",
      "id": "paragraph_1645679728483_207267607",
      "dateCreated": "2022-02-24 13:15:28.000",
      "dateStarted": "2022-03-03 16:26:19.345",
      "dateFinished": "2022-03-03 16:26:19.379",
      "status": "FINISHED"
    },
    {
      "text": "%spark.conf\n\nspark.jars.packages io.delta:delta-core_2.12:1.0.0\nspark.sql.extensions io.delta.sql.DeltaSparkSessionExtension\nspark.sql.catalog.spark_catalog org.apache.spark.sql.delta.catalog.DeltaCatalog\nspark.sql.warehouse.dir /opt/delta-warehouse\nzeppelin.interpreter.connect.timeout 600000",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:18:02.070",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.io.IOException: Can not change interpreter properties when interpreter process has already been launched\n\tat org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterGroupProperties(InterpreterSetting.java:936)\n\tat org.apache.zeppelin.interpreter.ConfInterpreter.interpret(ConfInterpreter.java:72)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:486)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:71)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645679277913_1886155751",
      "id": "paragraph_1645679277913_1886155751",
      "dateCreated": "2022-02-24 13:07:57.000",
      "dateStarted": "2022-03-03 16:18:02.077",
      "dateFinished": "2022-03-03 16:18:02.083",
      "status": "ERROR"
    },
    {
      "text": "%pyspark\n\ndef get_day_info(file):\n    pattern_date_time \u003d r\u0027.+([0-9]{4}-[0-9]{2}-[0-9]{2}).+\u0027\n    match \u003d re.match(pattern_date_time, file)\n    if match is not None:\n        return match.group(1)\n    else:\n        return (datetime.now()-timedelta(days \u003d 0)).strftime(\"%Y-%m-%d\")",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:22:30.624",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645674777530_558063867",
      "id": "paragraph_1645674777530_558063867",
      "dateCreated": "2022-02-24 11:52:57.000",
      "dateStarted": "2022-03-03 16:22:30.630",
      "dateFinished": "2022-03-03 16:22:30.862",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nfrom os import walk\nimport re\nimport datetime\nfrom datetime import timedelta\nimport pytz\nimport delta.tables\nimport pyspark.sql.functions as F\nfrom pyspark.sql.types import MapType,StringType,ArrayType\n\ndir\u003d\u0027/log-received/archived\u0027\n\nfilenames \u003d next(walk(dir), (None, None, []))[2]\nfilenames \u003d [dir+\"/\"+name for name in filenames]\n\nfrom datetime import datetime,timedelta\n\nday\u003d(datetime.now()-timedelta(days \u003d 0)).strftime(\"%Y-%m-%d\")\n\nspark.conf.set(\"spark.sql.sources.partitionOverwriteMode\",\"dynamic\")\n        \ndef get_df_from_raw_json_file(file):\n    df \u003d spark.read.format(\"json\").load(file)\n    day\u003dget_day_info(file)\n    df \u003d df.withColumn(\"day\",F.lit(day))\n    return df.withColumn(\"item\",F.explode(F.col(\"items\"))).drop(\"items\")\n    \ndef prepare_flatten_df(df):\n    sample\u003ddf.withColumn(\"item_basic\",F.to_json(F.col(\"item.item_basic\"))).drop(\"item.item_basic\")\n    \n    sample\u003dsample.selectExpr(\u0027day\u0027,\u0027sink_time\u0027,\u0027source\u0027,\u0027total_ads_count\u0027,\u0027total_count\u0027,\u0027url\u0027,\u0027item.item_type\u0027,\u0027item.itemid\u0027,\u0027item.shopid\u0027,\\\n             \u0027item.item_basic.badge_icon_type as item_basic_badge_icon_type\u0027,\\\n             \u0027item.item_basic.brand as item_basic_brand\u0027,\\\n             \u0027item.item_basic.can_use_bundle_deal as item_basic_can_use_bundle_deal\u0027,\\\n             \u0027item.item_basic.can_use_cod as item_basic_can_use_cod\u0027,\\\n             \u0027item.item_basic.can_use_wholesale as item_basic_can_use_wholesale\u0027,\\\n             \u0027item.item_basic.catid as item_basic_catid\u0027,\\\n             \u0027item.item_basic.cb_option as item_basic_cb_option\u0027,\\\n             \u0027item.item_basic.cmt_count as item_basic_cmt_count\u0027,\\\n             \u0027item.item_basic.ctime as item_basic_ctime\u0027,\\\n             \u0027item.item_basic.currency as item_basic_currency\u0027,\\\n             \u0027item.item_basic.discount as item_basic_discount\u0027,\\\n             \u0027\"to_json(item.item_basic.exclusive_price_info)\" as item_basic_exclusive_price_info\u0027,\\\n             \u0027item.item_basic.flag as item_basic_flag\u0027,\\\n             \u0027item.item_basic.has_lowest_price_guarantee as item_basic_has_lowest_price_guarantee\u0027,\\\n             \u0027item.item_basic.has_model_with_available_shopee_stock as item_basic_has_model_with_available_shopee_stock\u0027,\\\n             \u0027item.item_basic.historical_sold as item_basic_historical_sold\u0027,\\\n             \u0027item.item_basic.image as item_basic_image\u0027,\\\n             \u0027to_json(item.item_basic.images) as item_basic_images\u0027,\\\n             \u0027item.item_basic.is_adult as item_basic_is_adult\u0027,\\\n             \u0027item.item_basic.is_category_failed as item_basic_is_category_failed\u0027,\\\n             \u0027item.item_basic.is_cc_installment_payment_eligible as item_basic_is_cc_installment_payment_eligible\u0027,\\\n             \u0027item.item_basic.is_mart as item_basic_is_mart\u0027,\\\n             \u0027item.item_basic.is_non_cc_installment_payment_eligible as item_basic_is_non_cc_installment_payment_eligible\u0027,\\\n             \u0027item.item_basic.is_official_shop as item_basic_is_official_shop\u0027,\\\n             \u0027item.item_basic.is_on_flash_sale as item_basic_is_on_flash_sale\u0027,\\\n             \u0027item.item_basic.is_preferred_plus_seller as item_basic_is_preferred_plus_seller\u0027,\\\n             \u0027to_json(item.item_basic.item_rating) as item_basic_item_rating\u0027,\\\n             \u0027item.item_basic.item_status as item_basic_item_status\u0027,\\\n             \u0027item.item_basic.item_type as item_basic_item_type\u0027,\\\n             \u0027item.item_basic.itemid as item_basic_itemid\u0027,\\\n             \u0027item.item_basic.liked as item_basic_liked\u0027,\\\n             \u0027item.item_basic.liked_count as item_basic_liked_count\u0027,\\\n             \u0027item.item_basic.name as item_basic_name\u0027,\\\n             \u0027\"no-pack-size-for-some-item\" as item_basic_pack_size\u0027,\\\n             \u0027item.item_basic.price as item_basic_price\u0027,\\\n             \u0027item.item_basic.price_before_discount as item_basic_price_before_discount\u0027,\\\n             \u0027item.item_basic.price_max as item_basic_price_max\u0027,\\\n             \u0027item.item_basic.price_max_before_discount as item_basic_price_max_before_discount\u0027,\\\n             \u0027item.item_basic.price_min as item_basic_price_min\u0027,\\\n             \u0027item.item_basic.price_min_before_discount as item_basic_price_min_before_discount\u0027,\\\n             \u0027item.item_basic.raw_discount as item_basic_raw_discount\u0027,\\\n             \u0027item.item_basic.reference_item_id as item_basic_reference_item_id\u0027,\\\n             \u0027item.item_basic.shop_location as item_basic_shop_location\u0027,\\\n             \u0027item.item_basic.shopee_verified as item_basic_shopee_verified\u0027,\\\n             \u0027item.item_basic.shopid as item_basic_shopid\u0027,\\\n             \u0027item.item_basic.show_discount as item_basic_show_discount\u0027,\\\n             \u0027item.item_basic.show_free_shipping as item_basic_show_free_shipping\u0027,\\\n             \u0027item.item_basic.show_official_shop_label as item_basic_show_official_shop_label\u0027,\\\n             \u0027item.item_basic.show_official_shop_label_in_title as item_basic_show_official_shop_label_in_title\u0027,\\\n             \u0027item.item_basic.show_shopee_verified_label as item_basic_show_shopee_verified_label\u0027,\\\n             \u0027item.item_basic.size_chart as item_basic_size_chart\u0027,\\\n             \u0027item.item_basic.sold as item_basic_sold\u0027,\\\n             \u0027item.item_basic.status as item_basic_status\u0027,\\\n             \u0027item.item_basic.stock as item_basic_stock\u0027,\\\n             \u0027to_json(item.item_basic.tier_variations) as item_basic_tier_variations\u0027,\\\n             \u0027item.item_basic.transparent_background_image as item_basic_transparent_background_image\u0027,\\\n             \u0027to_json(item.item_basic.video_info_list) as item_basic_video_info_list\u0027,\\\n             \u0027item.item_basic.view_count as item_basic_view_count\u0027,\\\n             \u0027to_json(item.item_basic.voucher_info) as item_basic_voucher_info\u0027)\n             \n    return sample",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:24:28.059",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645667969506_408840309",
      "id": "paragraph_1645667969506_408840309",
      "dateCreated": "2022-02-24 09:59:29.000",
      "dateStarted": "2022-03-03 16:24:28.065",
      "dateFinished": "2022-03-03 16:24:28.290",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nimport os\n    \ndef insert_overwrite_table(df,table_name\u003d\"delta.`/warehouse/delta/shopee_data/api_search_item_raw_data_da`\",partition_col_name\u003d\u0027day\u0027):\n    if df.count() \u003c\u003d0:\n        return\n    \n    path\u003dtable_name.replace(\"delta.\",\"\").replace(\u0027`\u0027,\"\")\n    if not os.path.isdir(path):\n        df.write.format(\"delta\").partitionBy(partition_col_name).save(path)\n    spark.conf.set(\"spark.sql.sources.partitionOverwriteMode\",\"static\")\n    \n    columns\u003dspark.table(table_name).schema.names\n    columns.remove(partition_col_name)\n    \n    partition_col_val\u003ddf.select(partition_col_name).head(1)[0][partition_col_name]\n    view \u003d \"inserting_into_table_%s\" % table_name.replace(\".\",\u0027_\u0027).replace(\"/\",\"_\").replace(\u0027`\u0027,\"\")\n    print(view)\n    df.createOrReplaceTempView(view)\n    \n    sql\u003d\"\"\"\n    insert overwrite {table_name} partition({partition_col_name}\u003d\u0027{partition_col_val}\u0027)\n    select {columns} from\n    {view}\n    \"\"\".format(view\u003dview,table_name\u003dtable_name,partition_col_name\u003dpartition_col_name,partition_col_val\u003dpartition_col_val,columns\u003d\u0027,\u0027.join(columns))\n    \n    spark.sql(sql).show(truncate\u003dFalse)\n\n# 这段代码用于补历史数据\n\n# for file in filenames:\n#     df\u003dprepare_flatten_df(get_df_from_raw_json_file(file))\n#     insert_overwrite_table(df)\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:22:19.555",
      "progress": 52,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645668079926_1307885979",
      "id": "paragraph_1645668079926_1307885979",
      "dateCreated": "2022-02-24 10:01:19.000",
      "dateStarted": "2022-03-03 16:22:19.560",
      "dateFinished": "2022-03-03 16:22:19.788",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\ndef extract_today_data():\n    today_df\u003dprepare_flatten_df(get_df_from_raw_json_file(\"/log-received/api_api_v4_search_search_items.json\"))\n    insert_overwrite_table(today_df)\n    \nextract_today_data()",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:24:34.397",
      "progress": 35,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "inserting_into_table_delta__warehouse_delta_shopee_data_api_search_item_raw_data_da\n++\n||\n++\n++\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d88"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d89"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d90"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d91"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d92"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d93"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d94"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d95"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645679281382_122769375",
      "id": "paragraph_1645679281382_122769375",
      "dateCreated": "2022-02-24 13:08:01.000",
      "dateStarted": "2022-03-03 16:24:34.401",
      "dateFinished": "2022-03-03 16:24:40.258",
      "status": "FINISHED"
    },
    {
      "text": "%sql\n\nselect count(1),day\nfrom delta.`/warehouse/delta/shopee_data/api_search_item_raw_data_da`\ngroup by day\norder by day",
      "user": "anonymous",
      "dateUpdated": "2022-03-03 16:25:53.668",
      "progress": 85,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "count(1)0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "day1",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0.0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "count(1)": "string",
                      "day": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(1)\tday\n14279\t2022-03-03\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d100"
            },
            {
              "jobUrl": "http://954e81287f5f:4040/jobs/job?id\u003d101"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645668725622_441842136",
      "id": "paragraph_1645668725622_441842136",
      "dateCreated": "2022-02-24 10:12:05.000",
      "dateStarted": "2022-03-03 16:25:53.045",
      "dateFinished": "2022-03-03 16:25:53.573",
      "status": "FINISHED"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645681934067_19599997",
      "id": "paragraph_1645681934067_19599997",
      "dateCreated": "2022-02-24 13:52:14.000",
      "status": "FINISHED"
    }
  ],
  "name": "shopee_search_item_extract",
  "id": "2GX9W8SS1",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": true,
    "looknfeel": "default",
    "personalizedMode": "false",
    "cronExecutingUser": "anonymous",
    "cronExecutingRoles": "[]",
    "cron": "0 20 0 * * ?"
  },
  "info": {
    "inIsolatedMode": false,
    "isRunning": false
  }
}